{"version":3,"file":"edit-content.component.js","sourceRoot":"","sources":["../../../Users/goriunov/Desktop/Project_IOS_WEB/WEB/web_Angular_app/tmp/broccoli_type_script_compiler-input_base_path-CFh7kyFF.tmp/0/src/app/content/edit-content/edit-content.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit , OnDestroy } from '@angular/core';\nimport {FormGroup, FormControl, FormArray, REACTIVE_FORM_DIRECTIVES, Validators} from \"@angular/forms\";\nimport {ContentService} from \"../content.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Subscription} from \"rxjs/Rx\";\nimport {Content} from \"../../shared/content\";\n\n\ndeclare var CKEDITOR: any;\n@Component({\n  moduleId: module.id,\n  selector: 'app-edit-content',\n  templateUrl: 'edit-content.component.html',\n  styleUrls: ['edit-content.component.css'],\n  directives: [REACTIVE_FORM_DIRECTIVES]\n\n})\n\n\nexport class EditContentComponent implements OnInit , OnDestroy {\n\n  private subscription: Subscription;\n  private id: string;\n  private selectedContent: Content;\n  myForm : FormGroup;\n  sections : string[]= ['Networking' ,'WebDev' , 'Software', 'MobileDev' ,'DataBase'];\n\n\n\n// Find id route from link\n  constructor(private contService : ContentService ,\n              private activeRote : ActivatedRoute,\n              private router: Router) {\n    this.subscription = this.activeRote.params.subscribe(\n      (param: any) => {\n        this.id = param['id'];\n        this.selectedContent = this.contService.getSingleContent(+this.id);\n      }\n    )\n  }\n\n\n\n\n// Add Section IN form and remove it\n  onSelect(section){\n    (<FormArray>this.myForm.find('sections')).push(new FormControl(section , Validators.required));\n    this.sections.splice(this.sections.indexOf(section), 1);\n  }\n\n  onUnSelect(section){\n    this.sections.push((<FormArray>this.myForm.find('sections')).controls[section].value);\n    (<FormArray>this.myForm.find('sections')).removeAt(section);\n  }\n\n\n//Generate form\n\n/// Form for transfer CKEditor\n\n   article :string;\n   sectionsForm : any[];\n///////////////\n\n  ngOnInit() {\n\n\n// Third package\n      CKEDITOR.replace('editor1');\n  //...................\n      var header = '';\n      var description = '';\n      var imgUrl ='';\n      this.article = '';\n      this.sectionsForm = [];\n\n  // if we have edited form  will take values\n      if(this.id){\n        header = this.selectedContent.header;\n        description = this.selectedContent.description;\n        imgUrl = this.selectedContent.imgUrl;\n        this.article = this.selectedContent.article;\n\n        for(let i  = 0 ; i< this.selectedContent.sections.length ; i++){\n          this.sectionsForm.push(new FormControl(this.selectedContent.sections[i] , Validators.required));\n          this.sections.splice(this.sections.indexOf(this.selectedContent.sections[i]) , 1);\n        }\n      }\n\n  //Init form\n        this.myForm = new FormGroup({\n          'header': new FormControl(header , Validators.required),\n          'description': new FormControl(description , Validators.required),\n          'imgUrl': new FormControl(imgUrl , Validators.required),\n          'authorName': new FormControl('Author' , Validators.required),\n          'article': new FormControl(this.article ),\n          'sections': new FormArray(this.sectionsForm)\n        });\n    }\n\n\n\n\n\n// submit  form\n\n  onSubmit(){\n\n    var x = CKEDITOR.instances['editor1'].getData();\n    this.article = x;\n// form which will be submitted (other wise can not get CKEditor value properly)\n\n    const submitingForm = new FormGroup({\n      'header': new FormControl(''+this.myForm.find('header').value),\n      'description': new FormControl(''+this.myForm.find('description').value ),\n      'imgUrl': new FormControl(''+this.myForm.find('imgUrl').value),\n      'authorName': new FormControl('Author NAME'),\n      'article': new FormControl(this.article ),\n      'sections': new FormArray(this.sectionsForm)\n    });\n\n///////////\n\n\n    if(this.id){\n      var newArticle = submitingForm.value;\n      this.contService.editContent(+this.id, newArticle);\n\n    }else {\n      var newArticle = submitingForm.value;\n      this.contService.addContent(newArticle);\n    }\n    this.router.navigate(['/content/all' , this.id ? this.id : '']);\n  }\n\n  onCancel(){\n    this.router.navigate(['/content' ]);\n\n  }\n\n\n// Un subscribe from observable\n\n  ngOnDestroy(){\n    this.subscription.unsubscribe();\n  }\n\n}\n"]}